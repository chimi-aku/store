{"version":3,"sources":["components/Logging.js","components/HomePage.js","components/Registration.js","components/RegistrationPage.js","elements/Book.js","components/BookCard.js","components/BooksList.js","components/StorePage.js","components/ChartBookCard.js","components/ChartList.js","components/ChartPage.js","components/BoughtBookCard.js","components/BoughtBooksList.js","components/MyBooksPage.js","components/MoneyPage.js","components/App.js","serviceWorker.js","index.js"],"names":["Logging","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","state","username","password","bookChart","boughtBooks","money","moneyToPay","handleSuccessfulLogin","className","onSubmit","this","for","type","onChange","Component","HomePage","bind","data","usersData","user","handleLogin","history","push","alert","to","href","Registration","confirmPassword","handleSuccessfulRegistration","RegistrationPage","length","handleRegistration","Book","image","title","authors","published","price","BookCard","src","alt","onClick","newBookInChart","handleAddBookToChart","BookList","books","map","book","i","publishedDate","undefined","volumeInfo","slice","saleInfo","listPrice","amount","key","imageLinks","thumbnail","Store","text","handleSearchBook","replace","URL","console","log","fetch","then","response","json","items","catch","error","xmlns","width","height","viewBox","d","logout","BooksList","ChartBookCard","removeBookFromChart","ChartList","handleRemoveBookFromChart","ChartPage","clearChart","buyBooks","BoughtBookCard","BoughtBooksList","MyBooksPage","MoneyPage","moneyToAdd","handleChangeOfMoneyToAdd","handleAddMoney","parseInt","updateMoney","placeholder","clearArr","arr","pop","App","loggedInStatus","users","handleLogout","newUser","usersList","localStorage","removeItem","setItem","JSON","stringify","newbook","sort","a","b","localeCompare","u","hadndleUpdateMoneyToPay","titleOfBookToRemove","parentNode","childNodes","textContent","bookInChart","index","indexOf","splice","handleClearChart","handleUpdateMoney","hadnleBuyBooks","moneyLeft","getItem","parse","basename","exact","path","render","StorePage","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d18d535e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Logging extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            bookChart: [],\r\n            boughtBooks: [],\r\n            money: props.money,\r\n            moneyToPay: props.moneyToPay\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            username,\r\n            password,\r\n            bookChart,\r\n            boughtBooks,\r\n            money,\r\n            moneyToPay\r\n        } = this.state;\r\n        this.props.handleSuccessfulLogin({\r\n            username,\r\n            password,\r\n            bookChart,\r\n            boughtBooks,\r\n            money,\r\n            moneyToPay\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                <div className=\"input\">\r\n                    <label for=\"username\">username:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"input\">\r\n                    <label for=\"password\">password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <button className=\"button submit_button\"  type=\"submit\">Log In</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Logging;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Logging from './Logging';\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSuccessfulLogin = this.handleSuccessfulLogin.bind(this);\r\n\r\n    }\r\n\r\n    handleSuccessfulLogin(data) {\r\n        // TODO update parent component\r\n        // Authorising\r\n        const SuccessfulLog = (() => {\r\n            const { usersData } = this.props;\r\n            //console.log(usersData);\r\n            //console.log(data)\r\n            for (const user of usersData) {\r\n                if (\r\n                    user.username === data.username &&\r\n                    user.password === data.password\r\n                ) {\r\n                    data.money = user.money; // write amount of money for logged user\r\n                    data.moneyToPay = user.moneyToPay;\r\n                    data.bookChart = user.bookChart; // load content of bookchart for current user from all users\r\n                    data.boughtBooks = user.boughtBooks; // load content of boughtBooks for current user from all users\r\n                    return true;\r\n                }\r\n                    \r\n                \r\n            }\r\n            return false;\r\n        })();\r\n\r\n        if (SuccessfulLog) {\r\n            this.props.handleLogin(data);\r\n            this.props.history.push('/store'); // redirecting to store page\r\n        } else alert('Wrong username or password!');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home_page\">\r\n                <Logging handleSuccessfulLogin={this.handleSuccessfulLogin}/>\r\n                <NavLink to=\"/register\">\r\n                    <button className=\"button\">\r\n                        <a href>Create Account</a> {/* if i write hre=\"true\" warning disappear, but text looks like a hyperlink */}\r\n                    </button>\r\n                </NavLink>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from 'react';\r\n\r\nclass Registration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            bookChart: [],\r\n            boughtBooks: [],\r\n            money: 100,\r\n            moneyToPay: 0\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            username,\r\n            password,\r\n            confirmPassword,\r\n            bookChart,\r\n            boughtBooks,\r\n            money,\r\n            moneyToPay,\r\n        } = this.state;\r\n        this.props.handleSuccessfulRegistration({\r\n            username,\r\n            password,\r\n            confirmPassword,\r\n            bookChart,\r\n            boughtBooks,\r\n            money,\r\n            moneyToPay\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"form registration_form\" onSubmit={this.handleSubmit}>\r\n                <div className=\"input\">\r\n                    <label for=\"username\">username:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"input\">\r\n                    <label for=\"password\">password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"input\">\r\n                    <label for=\"confirmPassword\">confirm password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <button className=\"button submit_button\" type=\"submit\">\r\n                    Register\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Registration;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Registration from './Registration';\r\n\r\nclass RegistrationPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSuccessfulRegistration = this.handleSuccessfulRegistration.bind(this);\r\n    }\r\n\r\n    handleSuccessfulRegistration(data) {\r\n        // TODO update parent component\r\n        // Authorising\r\n        const SuccessfulReg = (() => {\r\n            const { usersData } = this.props;\r\n\r\n            // checking if already exist the same accout with user \r\n            for(const user of usersData) {\r\n                if(user.username === data.username)\r\n                    return false;\r\n            }\r\n\r\n\r\n            if(data.username.length > 0 && data.password.length > 0 && data.password ===  data.confirmPassword)\r\n                return true;\r\n            else\r\n                return false;\r\n        })();\r\n        \r\n        if (SuccessfulReg) {\r\n            this.props.handleRegistration(data);\r\n            this.props.history.push('/'); // redirecting to homepage\r\n        } else alert('incorrect data!');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"registration_page\">\r\n                <Registration handleSuccessfulRegistration={this.handleSuccessfulRegistration}/>\r\n                <NavLink to=\"/\">\r\n                    <button className=\"button\">\r\n                        <a href>Home</a>\r\n                    </button>\r\n                </NavLink>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegistrationPage;\r\n\r\n/*\r\n                <h1>Home</h1>\r\n                <h1>Status: {this.props.loggedInStatus}</h1>\r\n*/","export default class Book {\r\n    constructor(image, title, authors, published, price ) {\r\n        this.image = image;\r\n        this.title = title;\r\n        this.authors = authors;\r\n        this.published = published;\r\n        this.price = price;\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport Book from '../elements/Book'\r\n\r\nconst BookCard = props => {\r\n    const {image, title, authors, published, price = 40 } = props;\r\n\r\n    const addBookToChart = () => {\r\n        // Create object of book to pass to function\r\n        const newBookInChart = new Book(image, title, authors, published, price);\r\n        props.handleAddBookToChart(newBookInChart);\r\n    }\r\n\r\n    return(\r\n        <div className=\"book\">\r\n            <div className=\"bookcard_container\">\r\n                <img src={image} alt=\"book cover\"/>\r\n                <div className=\"bookcard_desc\">\r\n                    <h2 className=\"title\">{title}</h2>\r\n                    <h3 className=\"author\">{authors}</h3>\r\n                    <h3 className=\"published\">Publish date: {published}</h3>\r\n                    <h3 className=\"price\">{`${price}PLN`}</h3>\r\n                </div>\r\n            </div>\r\n            <button className=\"button add_to_chart_button\" onClick={addBookToChart}>Add to chart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookCard;","import React from 'react';\r\n\r\nimport BookCard from './BookCard';\r\n\r\nconst BookList = (props) => {\r\n    return (\r\n        <div className=\"book_list\">\r\n            {props.books.map((book, i) => {\r\n                //console.log(book.volumeInfo);\r\n\r\n                // VALIDATE DATA\r\n\r\n                let publishedDate;\r\n                book.volumeInfo.publishedDate === undefined\r\n                    ? (publishedDate = '-')\r\n                    : (publishedDate = book.volumeInfo.publishedDate.slice(\r\n                          0,\r\n                          4\r\n                      ));\r\n\r\n                let price;\r\n                book.saleInfo.listPrice.amount === undefined\r\n                    ? (price = '-')\r\n                    : (price = book.saleInfo.listPrice.amount);\r\n\r\n                return (\r\n                    <BookCard\r\n                        key={i}\r\n                        image={book.volumeInfo.imageLinks.thumbnail}\r\n                        title={book.volumeInfo.title}\r\n                        authors={book.volumeInfo.authors}\r\n                        published={publishedDate}\r\n                        price={price}\r\n                        handleAddBookToChart={props.handleAddBookToChart}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookList;\r\n\r\n// Fix prices later and publishes\r\n/*\r\nprice={book.saleInfo.listPrice.amount}\r\nlet price;\r\nbook.saleInfo.listPrice.amount === undefined ? price = '-' : price = book.saleInfo.listPrice.amount;\r\n\r\npublished={book.volumeInfo.publishedDate.slice(0, 4)}\r\n\r\n*/\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport BooksList from './BooksList'\r\n\r\nclass Store extends Component {\r\n    state = {\r\n        text: '',\r\n\r\n        books: [],\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleSearchBook = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        let text  = this.state.text;\r\n        text = text.replace(/ /g, '%22');\r\n\r\n        const URL = `https://www.googleapis.com/books/v1/volumes?q=${text}&filter=paid-ebooks`;\r\n        console.log(URL);\r\n\r\n        fetch(URL)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                console.log(data.items);\r\n                if(data.items !== undefined) {\r\n                    // deal with undefined values\r\n                    for(const book of data.items) {\r\n                        if(book.volumeInfo.imageLinks.thumbnail === undefined)\r\n                            book.volumeInfo.imageLinks.thumbnail = '../imgs/No-image-available.png'\r\n                        \r\n                    }\r\n                    \r\n                    this.setState({ books: data.items });\r\n                }\r\n            })\r\n            .catch( error => {\r\n                console.log(error)\r\n            })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"store_page\">\r\n                <header className=\"store_header\">\r\n                    <div className=\"logo_box\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\"><path d=\"M23 5v13.883l-1 .117v-16c-3.895.119-7.505.762-10.002 2.316-2.496-1.554-6.102-2.197-9.998-2.316v16l-1-.117v-13.883h-1v15h9.057c1.479 0 1.641 1 2.941 1 1.304 0 1.461-1 2.942-1h9.06v-15h-1zm-12 13.645c-1.946-.772-4.137-1.269-7-1.484v-12.051c2.352.197 4.996.675 7 1.922v11.613zm9-1.484c-2.863.215-5.054.712-7 1.484v-11.613c2.004-1.247 4.648-1.725 7-1.922v12.051z\"/></svg>\r\n                    </div>\r\n                    <div className=\"money_box\">\r\n                        <p>money</p>\r\n                        <p>{this.props.user.money}</p>\r\n                    </div>\r\n                    <div className=\"logout_box\">\r\n                        <NavLink to=\"/\">\r\n                            <button className=\"button logout_button\" onClick={this.props.logout}>\r\n                                <a href>Logout</a>\r\n                            </button>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className=\"books_buttons\">\r\n                        <div className=\"chart_box\">\r\n                            <NavLink to=\"/chart\">\r\n                                <button className=\"button chart_button\">\r\n                                    <a href>chart</a>\r\n                                </button>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className=\"myBooks_box\">\r\n                            <NavLink to=\"/mybooks\">\r\n                                <button className=\"button chart_button\">\r\n                                    <a href>my books</a>\r\n                                </button>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className=\"myBooks_box\">\r\n                            <NavLink to=\"/money\">\r\n                                <button className=\"button chart_button\">\r\n                                    <a href>Money</a>\r\n                                </button>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n\r\n                <section className=\"search_section\">\r\n                    <form className=\"store_form\" onSubmit={this.handleSearchBook}>\r\n                        <input\r\n                            className=\"searchBook_input\"\r\n                            name=\"text\"\r\n                            type=\"text\"\r\n                            value={this.state.text}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <button className=\"button submit_button searchBook_button\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </section>\r\n\r\n                <BooksList books={this.state.books} handleAddBookToChart={this.props.handleAddBookToChart}/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Store;\r\n\r\n/*\r\n                  <div className=\"bookslist\">\r\n                        {\r\n                            this.state.books.map((book, i) => {\r\n                                return <BookCard\r\n                                    key={i}\r\n                                    image={book.volumeInfo.imageLinks.thumbnail}\r\n                                    title={book.volumeInfo.title}\r\n                                    authors={book.volumeInfo.authors}\r\n                                    published={book.volumeInfo.publishedDate.slice(0,3)}\r\n                                    price={book.saleInfo.listPrice.amount}\r\n                                />\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n\r\n*/\r\n\r\n/*\r\n                <h1>Store</h1>\r\n                <h1>Status: {this.props.loggedInStatus}</h1>\r\n\r\n*/","import React from 'react'\r\n\r\n\r\nconst ChartBookCard = props => {\r\n    const {image, title, authors, published, price = 40 } = props;\r\n\r\n\r\n    return(\r\n        <div className=\"book\">\r\n            <div className=\"bookcard_container\">\r\n                <img src={image} alt=\"book cover\"/>\r\n                <div className=\"bookcard_desc\">\r\n                    <h2 className=\"title\">{title}</h2>\r\n                    <h3 className=\"author\">{authors}</h3>\r\n                    <h3 className=\"published\">Publish date: {published}</h3>\r\n                    <h3 className=\"price\">{`${price}PLN`}</h3>\r\n                </div>\r\n            </div>\r\n            <button className=\"button remove_from_chart_button\" onClick={props.removeBookFromChart}>Remove from chart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBookCard;","import React from 'react';\r\n\r\nimport ChartBookCard from \"./ChartBookCard\";\r\n\r\nconst ChartList = (props) => {\r\n    console.log(props.bookChart);\r\n\r\n    return (\r\n        <div className=\"chart_list\">\r\n            {props.bookChart.map((book, i) => {\r\n                //console.log(book)\r\n\r\n\r\n                return(\r\n                    <ChartBookCard\r\n                        key={i}\r\n                        image={book.image}\r\n                        title={book.title}\r\n                        authors={book.authors}\r\n                        published={book.published}\r\n                        price={book.price}\r\n                        removeBookFromChart={props.handleRemoveBookFromChart}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartList;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport ChartList from './ChartList'\r\n\r\nclass ChartPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart\">\r\n                <header className=\"chart_header\">\r\n                    <NavLink to=\"/store\">\r\n                        <button className=\"button chart_button\">\r\n                            <a href>Back</a>{' '}\r\n                            {/* if i write hre=\"true\" warning disappear, but text looks like a hyperlink */}\r\n                        </button>\r\n                    </NavLink>\r\n                    <button className=\"button chart_button clear_button\" onClick={this.props.clearChart}>Clear</button>\r\n                    <button className=\"button chart_button buy_button\" onClick={this.props.buyBooks}>Buy</button>\r\n                </header>\r\n                <div className=\"summary\">\r\n                    <p>{`Total chart value: ${this.props.moneyToPay}`}</p>\r\n                </div>\r\n\r\n                <ChartList bookChart={this.props.bookChart} handleRemoveBookFromChart={this.props.handleRemoveBookFromChart} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChartPage;\r\n","import React from 'react'\r\n\r\n\r\nconst BoughtBookCard = props => {\r\n    const {image, title, authors, published, price = 40 } = props;\r\n\r\n\r\n    return(\r\n        <div className=\"book\">\r\n            <div className=\"bookcard_container\">\r\n                <img src={image} alt=\"book cover\"/>\r\n                <div className=\"bookcard_desc\">\r\n                    <h2 className=\"title\">{title}</h2>\r\n                    <h3 className=\"author\">{authors}</h3>\r\n                    <h3 className=\"published\">Publish date: {published}</h3>\r\n                    <h3 className=\"price\">{`${price}PLN`}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoughtBookCard;","import React from 'react';\r\n\r\nimport BoughtBookCard from \"./BoughtBookCard\";\r\n\r\nconst BoughtBooksList = (props) => {\r\n    console.log(props.boughtBooks);\r\n\r\n    return (\r\n        <div className=\"chart_list\">\r\n            {props.boughtBooks.map((book, i) => {\r\n                //console.log(book)\r\n\r\n                return(\r\n                    <BoughtBookCard\r\n                        key={i}\r\n                        image={book.image}\r\n                        title={book.title}\r\n                        authors={book.authors}\r\n                        published={book.published}\r\n                        price={book.price}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoughtBooksList;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport BoughtBooksList from './BoughtBooksList'\r\n\r\nconst MyBooksPage = (props) => {\r\n    return (\r\n        <div className=\"myBooks_page\">\r\n            <header className=\"money_header\">\r\n                <NavLink to=\"/store\">\r\n                    <button className=\"button chart_button\">\r\n                        <a href>Back</a>{' '}\r\n                        {/* if i write hre=\"true\" warning disappear, but text looks like a hyperlink */}\r\n                    </button>\r\n                </NavLink>\r\n            </header>\r\n            <BoughtBooksList boughtBooks={props.boughtBooks}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyBooksPage;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass MoneyPage extends Component {\r\n\r\n    state = {\r\n        moneyToAdd: 0\r\n    }\r\n\r\n    handleChangeOfMoneyToAdd = (e) => {\r\n        this.setState({moneyToAdd: e.target.value})\r\n    }\r\n\r\n    handleAddMoney = (e) => {\r\n        e.preventDefault()\r\n        const money = parseInt(this.state.moneyToAdd, 10)\r\n        if(money > 0) {\r\n            this.props.updateMoney(money);\r\n        }\r\n        else {\r\n            this.setState({moneyToAdd: 0})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart_page\">\r\n                <header className=\"money_header\">\r\n                    <NavLink to=\"/store\">\r\n                        <button className=\"button chart_button\">\r\n                            <a href>Back</a>{' '}\r\n                            {/* if i write hre=\"true\" warning disappear, but text looks like a hyperlink */}\r\n                        </button>\r\n                    </NavLink>\r\n                    <div className=\"money_box\">\r\n                        <p>money</p>\r\n                        <p>{this.props.money}</p>\r\n                    </div>\r\n                </header>\r\n                <form className=\"money_form\" onSubmit={this.handleAddMoney}>\r\n                    <div className=\"input money_input\">\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"type in amout of money\"\r\n                            onChange={this.handleChangeOfMoneyToAdd}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        className=\"button chart_button submit_button\"\r\n                        type=\"submit\"\r\n                    >\r\n                        add Money\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MoneyPage;\r\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport '../styles/App.css';\n\n// PAGES\nimport HomePage from './HomePage';\nimport RegistrationPage from './RegistrationPage';\nimport StorePage from './StorePage';\nimport ChartPage from './ChartPage';\nimport MyBooksPage from './MyBooksPage';\nimport MoneyPage from './MoneyPage';\n\n//import Book from '../elements/Book'\n\nfunction clearArr(arr) {\n    while (arr.length > 0) arr.pop();\n}\n\nclass App extends Component {\n    state = {\n        loggedInStatus: 'NOT_LOGGED_IN',\n        user: {},\n        users: [\n            /*\n            {\n                username: 'test',\n                password: '123',\n                bookChart: [],\n                boughtBooks: [],\n                money: 100,\n                moneyToPay: 0\n            },\n            */\n        ],\n    };\n    // LOCAL STORAGE\n    componentDidMount() {\n        // LOCAL STORAGE\n        // load\n\n        if (\n            typeof localStorage !== 'undefined' && // eslint-disable-next-line\n            localStorage.getItem('users') != 'undefined'\n        ) {\n            let users = JSON.parse(localStorage.getItem('users'));\n            if (users === null) users = [];\n            this.setState({ users });\n        } else {\n            this.setState({ users: [] });\n        }\n    }\n\n    handleLogin = (data) => {\n        this.setState({\n            loggedInStatus: 'LOGGED_IN',\n            user: data,\n        });\n    };\n\n    handleLogout = () => {\n        this.setState({\n            loggedInStatus: 'NOT_LOGGED_IN',\n            user: {},\n        });\n    };\n\n    handleRegistration = (data) => {\n        //add new user to arr of all users\n        const newUser = {\n            username: data.username,\n            password: data.password,\n            bookChart: data.bookChart,\n            boughtBooks: data.boughtBooks,\n            money: 100,\n            moneyToPay: 0,\n        };\n\n        const usersList = this.state.users;\n        usersList.push(newUser);\n\n        this.setState({\n            users: usersList,\n        });\n\n        // update local storage\n        if (typeof localStorage !== 'undefined') {\n            localStorage.removeItem('users');\n            localStorage.setItem('users', JSON.stringify(usersList));\n        }\n    };\n\n    handleAddBookToChart = (newbook) => {\n        //console.log('Add book');\n        //console.log(newbook);\n\n        // Updating bookChart of current user\n        const user = this.state.user;\n        console.log(user);\n        user.bookChart.push(newbook);\n        user.bookChart.pop(); // WARNING!!!!! I pop because there appered some bug and book pushing double\n        user.bookChart.sort((a, b) => a.title.localeCompare(b.title)); // sort alphabetically by title\n        this.setState({ user });\n\n        //update users arr\n        const users = this.state.users;\n        for (const u of users) {\n            if (user.username === u.username) {\n                u.bookChart.push(newbook);\n                u.bookChart.sort((a, b) => a.title.localeCompare(b.title)); // sort alphabetically by title\n                break;\n            }\n        }\n\n        this.setState({ users });\n\n        // update local storage\n        if (typeof localStorage !== 'undefined') {\n            localStorage.removeItem('users');\n            localStorage.setItem('users', JSON.stringify(users));\n        }\n\n        this.hadndleUpdateMoneyToPay();\n    };\n\n    handleRemoveBookFromChart = (e) => {\n        //console.log('remove from chart');\n        const titleOfBookToRemove =\n            e.target.parentNode.childNodes[0].childNodes[1].childNodes[0]\n                .textContent;\n\n        // Find and delete first matching book\n        const user = this.state.user;\n        for (const bookInChart of user.bookChart) {\n            if (titleOfBookToRemove === bookInChart.title) {\n                const index = user.bookChart.indexOf(bookInChart);\n                user.bookChart.splice(index, 1);\n                break;\n            }\n        }\n        this.setState({ user });\n\n        this.hadndleUpdateMoneyToPay();\n    };\n\n    handleClearChart = () => {\n        // clear bookChart in state for current user and users\n        console.log('clear chart');\n\n        const user = this.state.user;\n        clearArr(user.bookChart);\n\n        const users = this.state.users;\n        for (const u of users) {\n            if (user.username === u.username) {\n                clearArr(u.bookChart);\n                break;\n            }\n        }\n\n        this.setState({ user, users });\n\n        // update local storage\n\n        if (typeof localStorage !== 'undefined') {\n            localStorage.removeItem('user');\n            localStorage.setItem('user', JSON.stringify(user));\n            localStorage.removeItem('users');\n            localStorage.setItem('users', JSON.stringify(users));\n        }\n\n        this.hadndleUpdateMoneyToPay();\n    };\n\n    hadndleUpdateMoneyToPay = () => {\n        let moneyToPay = 0;\n        for (const book of this.state.user.bookChart) {\n            moneyToPay += book.price;\n        }\n\n        // Updating bookChart of current user\n        const user = this.state.user;\n        user.moneyToPay = moneyToPay;\n        this.setState({ user });\n\n        //update users arr\n        const users = this.state.users;\n        for (const u of users) {\n            if (user.username === u.username) {\n                u.moneyToPay = moneyToPay;\n                break;\n            }\n        }\n\n        // update local storage\n        if (typeof localStorage !== 'undefined') {\n            localStorage.removeItem('user');\n            localStorage.setItem('user', JSON.stringify(user));\n            localStorage.removeItem('users');\n            localStorage.setItem('users', JSON.stringify(users));\n        }\n    };\n\n    handleUpdateMoney = (moneyToAdd = 0) => {\n        //console.log('add money');\n        //console.log(typeof moneyToAdd);\n\n        // Updating bookChart of current user\n        const user = this.state.user;\n        user.money += moneyToAdd;\n        this.setState({ user });\n\n        //update users arr\n        const users = this.state.users;\n        for (const u of users) {\n            if (user.username === u.username) {\n                u.money += moneyToAdd;\n                break;\n            }\n        }\n        this.setState({ users });\n\n        // update local storage\n        if (typeof localStorage !== 'undefined') {\n            localStorage.removeItem('users');\n            localStorage.setItem('users', JSON.stringify(users));\n        }\n    };\n\n    hadnleBuyBooks = () => {\n        //console.log('buy books');\n\n        const user = this.state.user;\n        const users = this.state.users;\n\n        // Check the proper amout of money\n        if (user.money > user.moneyToPay) {\n            // add books in chart to Mybooks\n\n            const moneyLeft = parseInt(user.money, 10) - parseInt(user.moneyToPay, 10);\n\n            // update current user\n            user.money = moneyLeft;\n\n            for (const book of user.bookChart) {\n                user.boughtBooks.push(book);\n                user.boughtBooks.pop() // WARNING!!!!! I pop because there appered some bug and book pushing double\n            }\n            user.boughtBooks.sort((a, b) => a.title.localeCompare(b.title)); // sort alphabetically by title\n\n            //update users arr\n            for (const u of users) {\n                if (user.username === u.username) {\n                    for (const book of u.bookChart) {\n                        u.boughtBooks.push(book);\n                    }\n                    user.boughtBooks.sort((a, b) => a.title.localeCompare(b.title)); // sort alphabetically by title\n                    u.money = moneyLeft;\n                    break;\n                }\n            }\n            \n             \n            this.handleUpdateMoney();\n            this.handleClearChart(); // Clearing chart and updating local storage\n        } else {\n            alert('You have not enough money');\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <HashRouter basename={'/'}>\n                    <Switch>\n                        <Route\n                            exact\n                            path={'/'}\n                            render={(props) => (\n                                <HomePage\n                                    {...props}\n                                    handleLogin={this.handleLogin}\n                                    loggedInStatus={this.state.loggedInStatus}\n                                    usersData={this.state.users}\n                                />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path={'/register'}\n                            render={(props) => (\n                                <RegistrationPage\n                                    {...props}\n                                    handleRegistration={this.handleRegistration}\n                                    loggedInStatus={this.state.loggedInStatus}\n                                    usersData={this.state.users}\n                                />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path={'/store'}\n                            render={(props) => (\n                                <StorePage\n                                    {...props}\n                                    loggedInStatus={this.state.loggedInStatus}\n                                    user={this.state.user}\n                                    handleAddBookToChart={\n                                        this.handleAddBookToChart\n                                    }\n                                    logout={this.handleLogout}\n                                />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path={'/chart'}\n                            render={(props) => (\n                                <ChartPage\n                                    {...props}\n                                    clearChart={this.handleClearChart}\n                                    bookChart={this.state.user.bookChart}\n                                    handleRemoveBookFromChart={\n                                        this.handleRemoveBookFromChart\n                                    }\n                                    moneyToPay={this.state.user.moneyToPay}\n                                    buyBooks={this.hadnleBuyBooks}\n                                />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path={'/mybooks'}\n                            render={(props) => <MyBooksPage {...props} boughtBooks={this.state.user.boughtBooks}/>}\n                            \n                            \n                        />\n                        <Route\n                            exact\n                            path={'/money'}\n                            render={(props) => (\n                                <MoneyPage\n                                    {...props}\n                                    updateMoney={this.handleUpdateMoney}\n                                    money={this.state.user.money}\n                                />\n                            )}\n                        />\n                    </Switch>\n                </HashRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n//localStorage.clear()"],"sourceRoot":""}